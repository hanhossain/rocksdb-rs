name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

concurrency:
  group: cmake-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  CC: clang
  CXX: clang++
  CTEST_OUTPUT_ON_FAILURE: ON
  SCCACHE_GHA_ENABLED: "true"

jobs:
  basic-test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
        - os: ubuntu-latest
          deps: sudo apt-get install -y ninja-build libgflags-dev lld
          cpus: 4
        - os: macos-latest
          deps: brew install ninja gflags
          cpus: 3

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable

    - name: Install dependencies
      run: ${{ matrix.deps }}

    - name: Run sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.5

    - name: Create build directory
      run: mkdir -p ${{ github.workspace }}/build

    - name: Configure CMake
      working-directory: ${{ github.workspace }}/build
      run: cmake -G Ninja -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_COLOR_DIAGNOSTICS=ON -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DWITH_ALL_TESTS=OFF ../rocksdb-cxx

    - name: Build
      working-directory: ${{ github.workspace }}/build
      run: ninja

    - name: Test
      working-directory: ${{ github.workspace }}/build
      run: ctest -C ${{ env.BUILD_TYPE }} -j ${{ matrix.cpus }}

  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
        - os: ubuntu-latest
          deps: sudo apt-get install -y ninja-build libgflags-dev lld
          cpus: 4
        - os: macos-latest
          deps: brew install ninja gflags
          cpus: 3

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable

    - name: Install dependencies
      run: ${{ matrix.deps }}

    - name: Run sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.5

    - name: Create build directory
      run: mkdir -p ${{ github.workspace }}/build

    - name: Configure CMake
      working-directory: ${{ github.workspace }}/build
      run: cmake -G Ninja -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_COLOR_DIAGNOSTICS=ON -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DWITH_ALL_TESTS=ON ../rocksdb-cxx

    - name: Build
      working-directory: ${{ github.workspace }}/build
      run: ninja

    - name: Test
      working-directory: ${{ github.workspace }}/build
      run: ctest -C ${{ env.BUILD_TYPE }} -j ${{ matrix.cpus }}
  
  build-examples:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
        - os: ubuntu-latest
          deps: sudo apt-get install -y ninja-build libgflags-dev lld
        - os: macos-latest
          deps: brew install ninja gflags
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - name: Install dependencies
      run: ${{ matrix.deps }}
    - name: Run sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.5
    - name: Create build directory
      run: mkdir -p ${{ github.workspace }}/build
    - name: Configure CMake
      working-directory: ${{ github.workspace }}/build
      run: cmake -G Ninja -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_COLOR_DIAGNOSTICS=ON -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DWITH_TESTS=OFF -DWITH_EXAMPLES=ON ../rocksdb-cxx
    - name: Build
      working-directory: ${{ github.workspace }}/build
      run: ninja
